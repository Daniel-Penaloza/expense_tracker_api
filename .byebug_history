c
request.body.read
exit
c
exit
request.body.read
exit
request.body.read
request.body
request
request.body.read
request.body
request
exit
r.success?
r.success
r
exit
missing_keys
expense
exit
expense.transform_keys {|k| k.to_s }
expense.transform_keys
expense.each_key {|k| puts k.to_s }
expense.each_key do |k|
expense.each_key
expense.rehash
expense.methods
expense
exit
clear
exit
request.body.read
request
expense
expense.stringify_keys
expense
expense.stringigy
expense.keys
expense
expected_keys
expense.keys
expense
expense.map{|e| puts e.to_s }
expense.map{|e| pp e.to_s }
expense.map{|e| p e.to_s }
expense.keys
expense
missing_keys
n
expense
exit
Sinatra::IndifferentHash.new(expense)
Sinatra::IndifferentHash(expense)
Sinatra::IndifferentHash.new(expense)
expense
Sinatra::IndifferentHash.new(expense)
Sinatra::IndifferentHash.new
Sinatra::IndifferentHash
Sinatra
expense
r
expense
exit
request.body.read.to_h
request.body.read
request.body
request
exit
request.body.read
request.body
request
Sinatra::IndifferentHash.new(request.body.read)
exit
request.body.read
request
Sinatra::IndifferentHash.new(request.body.read)
exit
r
exit
expense.class
expense
expense.to_h
expense
exit
expense
exit
expense.valid?
expense
exit
expense.to_h
expense
request.body.read
request
expense
c
expense
exit
expense
r
exit
expense
exit
Ox.load(request.body.read, mode: :hash)
exit
Ox.load(request.body.read, mode: :hash)
Ox.load(request.body.read)
Ox.load(reques.body.read)
exit
Ox::Document.new
Ox
request.body.read
request.body
request.body.read
require 'ox'
Ox.new
Ox
request.body.read
